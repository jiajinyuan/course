package ${package.Controller};


import ${package.Entity}.${entity};
import ${package.Service}.${table.serviceName};
import com.jf.xuan.common.model.common.ResponseResult;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.cache.annotation.CacheEvict;
import org.springframework.cache.annotation.CachePut;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.web.bind.annotation.*;

#if(${restControllerStyle})
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * $!{table.comment} 前端控制器
 *
 * @author ${author}
 * @since ${date}
 */
@Slf4j
@Api(value = "$!{table.comment}")
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    @Qualifier(${table.serviceName}.SERVICE_ID)
    private ${table.serviceName}  ${table.entityPath}Service;


    @ApiOperation("列表")
    @GetMapping("/list")
    public ResponseResult list(${entity} entity) throws Exception {
        return ${table.entityPath}Service.list(entity);
    }

    @ApiOperation("分页")
    @GetMapping("/page")
    public ResponseResult page(${entity} entity) throws Exception {
        return ${table.entityPath}Service.page(entity);
    }

    @ApiOperation("添加")
    @CachePut(value = "${entity}", key = "#entity.id")
    @PostMapping("/add")
    public ResponseResult add(@RequestBody ${entity} entity) throws Exception {
        return ${table.entityPath}Service.add(entity);
    }

    @ApiOperation("修改")
    @CachePut(value = "${entity}", key = "#entity.id")
    @PostMapping("/modify")
    public ResponseResult modify(@RequestBody ${entity} entity) throws Exception {
        return ${table.entityPath}Service.modify(entity);
    }

    @ApiOperation("删除")
    @CacheEvict(value = "${entity}", key = "#id")
    @GetMapping("/delete")
    public ResponseResult delete(Long id) throws Exception {
        return ${table.entityPath}Service.delete(id);
    }

    @ApiOperation("获取详情")
    @Cacheable(value = "${entity}", key = "#id")
    @GetMapping("/get")
    public ResponseResult get(Long id) throws Exception {
        return ${table.entityPath}Service.get(id);
    }
}

#end